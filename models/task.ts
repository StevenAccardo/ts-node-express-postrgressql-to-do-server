import { DataTypes } from 'sequelize';
import type { Optional, Model } from 'sequelize';
import sequelize from '../util/database.js';

// Defines what properties are required to be defined on the model
interface TaskAttributes {
    id: number;
    task: string;
    completed: boolean;
    completed_timestamp: Date;
}

// Makes the id optional upon creation, since it is auto-generated by sequelize.
interface TaskCreationAttributes extends Optional<TaskAttributes, 'id'> {}

// Defines the properties on an instance, or record in the table.
interface TaskInstance
    extends Model<TaskAttributes, TaskCreationAttributes>,
        TaskAttributes {
    createdAt: Date;
    updatedAt: Date;
}

export const Task = sequelize.define<TaskInstance>('Task', {
    id: {
        type: DataTypes.INTEGER,
        autoIncrement: true,
        allowNull: false,
        primaryKey: true,
    },
    task: {
        type: DataTypes.STRING,
        allowNull: false,
    },
    completed: {
        type: DataTypes.BOOLEAN,
        allowNull: false,
        defaultValue: false,
    },
    completed_timestamp: {
        type: DataTypes.DATE,
        allowNull: true,
    },
});

export default Task;
