import { Model, INTEGER, STRING, DATE } from 'sequelize';
import type {
    InferAttributes,
    InferCreationAttributes,
    CreationOptional,
} from 'sequelize';

import sequelize from '../util/database.js';

class User extends Model<InferAttributes<User>, InferCreationAttributes<User>> {
    declare id: CreationOptional<number>;
    declare email: string;
    declare password: string;
    declare createdAt: CreationOptional<Date>;
    declare updatedAt: CreationOptional<Date>;
}

User.init(
    {
        id: {
            type: INTEGER,
            autoIncrement: true,
            allowNull: false,
            primaryKey: true,
        },
        email: {
            type: STRING,
            allowNull: false,
        },
        password: {
            type: STRING,
            allowNull: false,
        },
        createdAt: DATE,
        updatedAt: DATE,
    },
    {
        tableName: 'users',
        sequelize,
    },
);

// // Defines what properties are required to be defined on the model
// interface UserAttributes {
//     id: number;
//     email: string;
//     password: string;
// }

// // Makes the id optional upon creation, since it is auto-generated by sequelize.
// interface UserCreationAttributes extends Optional<UserAttributes, 'id'> {}

// // Defines the properties on an instance, or record in the table.
// interface UserInstance
//     extends Model<UserAttributes, UserCreationAttributes>,
//         UserAttributes {
//     createdAt: Date;
//     updatedAt: Date;
// }

// // Leverage sequelize to create the user table for the PG DB
// const User = sequelize.define<UserInstance>('user', {
//     id: {
//         type: INTEGER,
//         autoIncrement: true,
//         allowNull: false,
//         primaryKey: true,
//     },
//     email: {
//         type: STRING,
//         allowNull: false,
//     },
//     password: {
//         type: STRING,
//         allowNull: false,
//     },
// });

export default User;
